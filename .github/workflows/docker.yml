name: Build, Dockerize, and Push to Docker Hub

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'  # Specify the Go version you want to use

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-modules-

      - name: Install dependencies
        run: |
          cd src
          go mod tidy

      - name: Build Linux binary
        run: |
          cd src
          GOOS=linux GOARCH=amd64 go build -o kinozal-bot-linux main.go

      - name: Build Docker image
        run: |
          # Build Docker image for Linux
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kinozalbot:${GITHUB_SHA} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          # Push Docker image to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/kinozalbot:${GITHUB_SHA}

      - name: Tag Docker image with 'latest'
        run: |
          # Tag the image with 'latest'
          docker tag ${{ secrets.DOCKER_USERNAME }}/kinozalbot:${GITHUB_SHA} ${{ secrets.DOCKER_USERNAME }}/kinozalbot:latest

      - name: Push 'latest' tag to Docker Hub
        run: |
          # Push the 'latest' tag to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/kinozalbot:latest