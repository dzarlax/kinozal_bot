name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags, e.g., v1.0.0, v2.1.3

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'  # Specify the Go version you want to use

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-modules-

      - name: Install dependencies
        run: |
          go mod tidy

      - name: Build binaries for multiple platforms
        run: |
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o kinozal-bot-linux main.go
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o kinozal-bot.exe main.go
          # Build for macOS
          GOOS=darwin GOARCH=arm64 go build -o kinozal-bot-darwin main.go

      - name: Archive and prepare binaries for release
        run: |
          # Create a release archive for Linux, macOS, and Windows
          zip kinozal-bot-linux.zip kinozal-bot-linux .env.example README.md
          zip kinozal-bot-darwin.zip kinozal-bot-darwin .env.example README.md
          powershell Compress-Archive -Path kinozal-bot.exe, .env.example, README.md -DestinationPath kinozal-bot-windows.zip

      - name: Create a GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files:
            - kinozal-bot-linux.zip
            - kinozal-bot-darwin.zip
            - kinozal-bot-windows.zip
